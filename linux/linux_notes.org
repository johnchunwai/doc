* initialization
#+BEGIN_SRC 
sudo apt-get update
sudo apt-get upgrade
sudo apt-get dkms build-essential module-assistant
sudo m-a prepare
# if using virtualbox, install guest additions
sudo apt-get install apt-file
sudo apt-get install checkinstall
#+END_SRC

* tweaks
** system settings -> keyboard -> app shortcuts
*** add /usr/bin/xfce4-terminal.wrapper for Ctl-Alt-T
** system settings -> window manager -> advanced
*** check snap "to other windows"
** edit ~/.config/user-dirs.dirs
*** change all folders to lowercase names
*** rename 'y/A-Z/a-z' <each of the files in ls ~/>

* package management
** apt-get
*** commands
#+BEGIN_SRC 
sudo apt-get install <package>
apt-cache search <package> --names-only
sudo apt-get purge <package>
sudo apt-get build-dep <package>
apt-cache policy <package> (show version)
sudo apt-get dist-upgrade
apt-file search <filename> // look for pkg that contains that file
#+END_SRC
** dpkg
*** commands
#+BEGIN_SRC 
sudo dpkg -i /path/to/deb/file (-r for remove)
sudo apt-get install -f (for missing dependencies)
apt-cache policy/search <package> will show the dpkg package
dpkg -l | grep <package> to find installed packages
#+END_SRC

* install from source
#+BEGIN_SRC 
cd downloads
wget <url>
tar -xzvf <tar.gz file>
cd <src dir>
./configure
# fix all dependencies
make
# the following replaces make install and create a deb pkg for uninstall
sudo checkinstall
# keep the src folder so we can sudo make uninstall
#+END_SRC

* for dev on ubuntu
#+BEGIN_SRC 
# install from src gnu global (apt-get too outdated)
# cmake 3.3 or above from src
sudo apt-get install clang-3.6
sudo apt-get install libclang-3.6-dev
# emacs 24.4 or above from src
sudo apt-get install git
sudo apt-get install mesa-utils
sudo apt-get install nux-tools
sudo apt-get install mesa-common-dev
# in handmade/, gtags
#+END_SRC

* choose default compiler
#+BEGIN_SRC 
sudo update-alternatives --config cc
sudo update-alternatives --config c++
#+END_SRC
If you've installed your clang manually and put it in a non standard
place it may not show up with --config. For example if it's in
/usr/bin/clang++-3.6, then first install a new alternative:
#+BEGIN_SRC
sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-3.6 30
#+END_SRC

* oh-my-zsh
#+BEGIN_SRC 
sudo apt-get install curl
sudo apt-get install zsh
sudo apt-get install git
curl -L http://install.ohmyz.sh > install.sh
sh install.sh
#+END_SRC

* X11 forwarding
this can be used to render GUI and graphics on windows host to improve
3d performance for example from linux guest on virtualbox
- on linux (server side but X11 client)
#+BEGIN_SRC 
# in /etc/ssh/sshd_config
# make sure sshd is installed or use package manager to get it
X11Forwarding yes

# make sure xauth is installed; if not, apt-get it

# if vbox is using NAT for network
# add port forwarding for port 22 so that host can hit it
#+END_SRC
- on windows (client side X11 server)
#+BEGIN_SRC 
# use mobaXterm
# make sure ssh settings have X11 forwarding enabled
# display settings have hardware acceleration turned on
# find VM IP from network settings
ssh -X -v <user>@<vm ip>
#+END_SRC

* misc
** check ubuntu version, 32/64bit
#+BEGIN_SRC 
lsb_release -a
uname -m
#+END_SRC
** check cpu 32/64bit
#+BEGIN_SRC 
lscpu
#+END_SRC
** check kernel version
#+BEGIN_SRC 
uname -r
#+END_SRC
** check 3d cap
#+BEGIN_SRC 
/usr/lib/nux/unity_support_test -p (with nux-tools)
glxinfo | grep OpenGL
glxgears
glmark2
#+END_SRC
** check disk usage
#+BEGIN_SRC 
df -h
#+END_SRC
** running sudo with user path
#+BEGIN_SRC 
sudo -E env "PATH=$PATH" <command> <args>
#+END_SRC
